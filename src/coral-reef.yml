$schema: vscode://schemas/color-theme
name: Coral Reef
author: 1nVitr0
maintainers:
  - Aram Becker <becker.aram@gmail.com>
semanticClass: theme.coralReef
semanticHighlighting: true
coralReef:
  base:
    - &BG '#090909'
    - &FG '#EBEBEB'
    - &SELECTION '#06e9cb35'
    - &LineHighlight '#2A2A2A'
    - &TAB_DROP_BG '#44475A70'

    # UI Variants
    - &FGDim '#868686'
    - &FGDimmer '#646464'
    - &FGHighlight '#000000'
    - &BGHighlight '#AAAAAA'
    - &BGActive '#464646'
    - &BGLighter '#383838'
    - &BGLight '#1B1B1B'
    - &BGDark '#040404'
    - &BGDarker '#000000'
  colors:
    - &COMMENT '#048b79'
    - &CYAN '#06e5c7'
    - &GREEN '#38e71d'
    - &ORANGE '#f97339'
    - &YELLOWISH '#ed9a26'
    - &YELLOW '#e8cd21'
    - &BLUE '#1392E8'
    - &RED '#ef3939'
    - &PURPLE '#b87aff'
  theme:
    - &PRIMARY '#d04306'
  ansi:
    - &COLOR0 '#0f0f0f'
    - &COLOR1 '#ef3939'
    - &COLOR2 '#38e71d'
    - &COLOR3 '#e8cd21'
    - &COLOR4 '#1392E8'
    - &COLOR5 '#f97339'
    - &COLOR6 '#06e5c7'
    - &COLOR7 '#EBEBEB'
    - &COLOR8 '#424242'
    - &COLOR9 '#f58080'
    - &COLOR10 '#7df2a0'
    - &COLOR11 '#f1e179'
    - &COLOR12 '#76c2f4'
    - &COLOR13 '#fba783'
    - &COLOR14 '#88fcec'
    - &COLOR15 '#FFFFFF'
  other:
    - &WHITE '#FFFFFF'
    - &BLACK '#000000'
    - &NonText '#FFFFFF1A'

# User Interface (more info: https://code.visualstudio.com/docs/getstarted/theme-color-reference)
colors:
  # Integrated Terminal Colors
  terminal.background: *COLOR0
  terminal.foreground: *FG
  terminal.selectionBackground: *SELECTION
  terminal.ansiBrightBlack: *COLOR8
  terminal.ansiBrightRed: *COLOR9
  terminal.ansiBrightGreen: *COLOR10
  terminal.ansiBrightYellow: *COLOR11
  terminal.ansiBrightBlue: *COLOR12
  terminal.ansiBrightMagenta: *COLOR13
  terminal.ansiBrightCyan: *COLOR14
  terminal.ansiBrightWhite: *COLOR15
  terminal.ansiBlack: *COLOR0
  terminal.ansiRed: *COLOR1
  terminal.ansiGreen: *COLOR2
  terminal.ansiYellow: *COLOR3
  terminal.ansiBlue: *COLOR4
  terminal.ansiMagenta: *COLOR5
  terminal.ansiCyan: *COLOR6
  terminal.ansiWhite: *COLOR7

  # Contrast Colors
  contrastBorder: # An extra border around elements to separate them from others for greater contrast
  contrastActiveBorder: # An extra border around active elements to separate them from others for greater contrast

  # Base Colors
  focusBorder: *PRIMARY # Overall border color for focused elements. This color is only used if not overridden by a component
  foreground: *FG # Overall foreground color. This color is only used if not overridden by a component
  widget.shadow: # Shadow color of widgets such as Find/Replace inside the editor
  selection.background: *SELECTION # Background color of text selections in the workbench (for input fields or text areas, does not apply to selections within the editor and the terminal)
  errorForeground: *RED # Overall foreground color for error messages (this color is only used if not overridden by a component)

  # Button Control
  button.background: *PRIMARY # Button background color
  button.foreground: *FG # Button foreground color
  button.border: # Button border color
  button.hoverBackground: !alpha [*PRIMARY, A0] # Button background color when hovering
  button.secondaryBackground: *BGLight # secondary button background color.
  button.secondaryForeground: *FG # secondary button foreground color.
  button.secondaryHoverBackground: *BGLighter # secondary button background color when hovering.

  # Dropdown Control
  dropdown.background: *BGLighter # Dropdown background
  dropdown.border: *FGDimmer # Dropdown border
  dropdown.foreground: *FG # Dropdown foreground

  # Input Control
  input.background: *BG # Input box background
  input.foreground: *FG # Input box foreground
  input.border: *FGDimmer # Input box border
  input.placeholderForeground: *FGDimmer # Input box foreground color for placeholder text
  inputOption.activeBorder: *PRIMARY # Border color of activated options in input fields
  inputValidation.infoForeground: # Input validation foreground color for information severity
  inputValidation.infoBackground: # Input validation background color for information severity
  inputValidation.infoBorder: *BLUE # Input validation border color for information severity
  inputValidation.warningForeground: # Input validation foreground color for warning severity
  inputValidation.warningBackground: # Input validation background color for information warning
  inputValidation.warningBorder: *YELLOW # Input validation border color for warning severity
  inputValidation.errorForeground: # Input validation foreground color for error severity
  inputValidation.errorBackground: # Input validation background color for error severity
  inputValidation.errorBorder: *RED # Input validation border color for error severity

  # Scroll Bar Control
  scrollbar.shadow: *BLACK # Scroll Bar shadow to indicate that the view is scrolled
  scrollbarSlider.activeBackground: # Slider background color when active
  scrollbarSlider.background: # Slider background color
  scrollbarSlider.hoverBackground: # Slider background color when hovering

  # Badge
  badge.foreground: *FG # Badge foreground color
  badge.background: *PRIMARY # Badge background color

  # Progress Bar
  progressBar.background: *PRIMARY # Background color of the progress bar shown for long running operations

  # List & Trees
  list.activeSelectionBackground: *BGHighlight # List/Tree background color for the selected item when the list/tree is active
  list.activeSelectionForeground: *FGHighlight # List/Tree foreground color for the selected item when the list/tree is active
  list.dropBackground: *BGActive # List/Tree drag and drop background when moving items around using the mouse
  list.focusBackground: *LineHighlight # List/Tree background color for the focused item when the list/tree is active
  list.highlightForeground: *ORANGE # List/Tree foreground color of the match highlights when searching inside the list/tree
  list.hoverBackground: *BGDarker # List/Tree background when hovering over items using the mouse
  list.inactiveSelectionBackground: *BGActive # List/Tree background color for the selected item when the list/tree is inactive
  list.inactiveSelectionForeground: # List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not
  list.warningForeground: *YELLOW # Color of warning decorations in the explorer
  list.errorForeground: *RED # Color of error decorations in the explorer
  list.hoverForeground: # List/Tree foreground when hovering over items using the mouse
  list.focusForeground: # List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not

  # Activity Bar
  activityBar.background: *BGLighter # Activity Bar background color
  activityBar.inactiveForeground: *FGDim # Activity bar item foreground color when it is inactive
  activityBar.dropBackground: # Drag and drop feedback color for the Activity Bar items
  activityBar.foreground: *FG # Activity bar foreground color (for example used for the icons)
  activityBar.border: # Activity Bar border color with the Side Bar
  activityBar.activeBorder: *PRIMARY # Activity Bar indicator color
  activityBar.activeBackground: *BGLight # Activity Bar indicator background color
  activityBarBadge.background: *PRIMARY # Activity notification badge background color
  activityBarBadge.foreground: *FG # Activity notification badge foreground color

  # Side Bar
  sideBar.background: *BGLight # Side Bar background color
  sideBar.foreground: # Side Bar foreground color. The Side Bar is the container for views like Explorer and Search
  sideBar.border: *BG # Side Bar border color on the side separating the editor
  sideBarTitle.foreground: *FG # Side Bar title foreground color
  sideBarSectionHeader.background: *SELECTION # Side Bar section header background color
  sideBarSectionHeader.foreground: # Side Bar section header foreground color
  sideBarSectionHeader.border: # Side bar section header border color

  # Editor Group & Tabs
  editorGroup.background: # Background color of an editor group. The background color shows up when dragging editor groups around
  editorGroup.border: # Color to separate multiple editor groups from each other
  editorGroup.dropBackground: # Background color when dragging editors around
  editorGroupHeader.noTabsBackground: # Background color of the editor group title header when Tabs are disabled
  editorGroupHeader.tabsBackground: *BGDarker # Background color of the Tabs container
  editorGroupHeader.tabsBorder: # Border color of the editor group title header when tabs are enabled. Editor groups are the containers of editors
  tab.activeBackground: *BG # Active Tab background color
  tab.activeForeground: *FG # Active Tab foreground color in an active group
  tab.border: *BGDarker # Border to separate Tabs from each other
  tab.activeBorderTop: *PRIMARY # A border drawn to the top of the active tab
  tab.activeBorder: # A border drawn to the bottom of the active tab
  tab.unfocusedActiveBorder: # A border drawn to the bottom of the active tab in an editor group that is not focused
  tab.inactiveBackground: *BGLight # Inactive Tab background color
  tab.inactiveForeground: *FGDim # Inactive Tab foreground color in an active group
  tab.unfocusedActiveForeground: # Active tab foreground color in an inactive editor group
  tab.unfocusedInactiveForeground: # Inactive tab foreground color in an inactive editor group

  # Editor Colors
  editor.foreground: *FG # Background color of a symbol during read-access, for example when reading a variable
  editor.wordHighlightStrongBackground: !alpha [*YELLOW, 60]
  editor.background: *BG
  editorLineNumber.foreground: *FGDimmer
  editorLineNumber.activeForeground: !alpha [*CYAN, D9]
  editorCursor.foreground: *FG

  editor.selectionBackground: *SELECTION # Color of the editor selection
  editor.selectionHighlightBackground: !alpha [*YELLOW, 40] # Color for regions with the same content as the selection
  editor.inactiveSelectionBackground: *BGActive # Color of the selection in an inactive editor
  editor.foldBackground: *BGDarker # Background color for folded ranges

  editor.wordHighlightBackground: !alpha [*BLUE, 40] # Background color of a symbol during write-access, for example when writing to a variable

  editor.findMatchBackground: !alpha [*YELLOW, 60]
  editor.findMatchHighlightBackground: !alpha [*YELLOW, 40] # Color of the other search matches
  editor.findRangeHighlightBackground: *LineHighlight # Color the range limiting the search

  editor.hoverHighlightBackground: *SELECTION # Highlight below the word for which a hover is shown

  editor.lineHighlightBackground: *BGLighter # Background color for the highlight of line at the cursor position
  editor.lineHighlightBorder: # Background color for the border around the line at the cursor position

  editorLink.activeForeground: *CYAN # Color of active links
  editor.rangeHighlightBackground: *SELECTION # Background color of highlighted ranges, like by Quick Open and Find features

  editor.snippetTabstopHighlightBackground: *BG # Highlight background color of a snippet tabstop
  editor.snippetTabstopHighlightBorder: *PRIMARY # Highlight border color of a snippet tabstop
  editor.snippetFinalTabstopHighlightBackground: *BG # Highlight background color of the final tabstop of a snippet
  editor.snippetFinalTabstopHighlightBorder: *GREEN # Highlight border color of the final tabstop of a snippet

  editorWhitespace.foreground: *NonText # Color of whitespace characters in the editor
  editorIndentGuide.background: *NonText # Color of the editor indentation guides
  editorIndentGuide.activeBackground: !alpha [*WHITE, 45] # Color of the active indentation guide
  editorRuler.foreground: *NonText # Color of the editor rulers

  editorCodeLens.foreground: *FGDim # Foreground color of an editor CodeLens

  # NOTE: These are not set because they tend to be highly contested from
  # person to person. Thus, setting these is probably better suited
  # for workbench.colorCustomizations in User Settings
  editorBracketMatch.background: # Background color behind matching brackets
  editorBracketMatch.border: # Color for matching brackets boxes

  editorBracketHighlight.foreground1: *FG # Color of first pair of brackets
  editorBracketHighlight.foreground2: *YELLOWISH # Color of second pair of brackets
  editorBracketHighlight.foreground3: *CYAN # Color of third pair of brackets
  editorBracketHighlight.foreground4: *GREEN # Color of fourth pair of brackets
  editorBracketHighlight.foreground5: *PURPLE # Color of fifth pair of brackets
  editorBracketHighlight.foreground6: *ORANGE # Color of sixth pair of brackets
  editorBracketHighlight.unexpectedBracket.foreground: *RED # Color of bracket matching error

  editorOverviewRuler.border: *BGDarker # Color of the overview ruler border
  editorOverviewRuler.findMatchForeground:
  editorOverviewRuler.rangeHighlightForeground:
  editorOverviewRuler.selectionHighlightForeground: *ORANGE
  editorOverviewRuler.wordHighlightForeground: *CYAN
  editorOverviewRuler.wordHighlightStrongForeground: *GREEN
  editorOverviewRuler.modifiedForeground: !alpha [*CYAN, 80]
  editorOverviewRuler.addedForeground: !alpha [*GREEN, 80]
  editorOverviewRuler.deletedForeground: !alpha [*RED, 80]
  editorOverviewRuler.errorForeground: !alpha [*RED, 80]
  editorOverviewRuler.warningForeground: !alpha [*YELLOW, 80]
  editorOverviewRuler.infoForeground: !alpha [*BLUE, 80]

  minimap.background: *BGLight
  minimap.selectionHighlight: !alpha [*CYAN, A2]

  editorError.foreground: *RED # Foreground color of error squigglies in the editor
  editorError.border: # Border color of error squigglies in the editor
  editorWarning.foreground: *YELLOW # Foreground color of warning squigglies in the editor
  editorWarning.border: # Border color of warning squigglies in the editor

  editorGutter.background: # Background color of the editor gutter
  editorGutter.modifiedBackground: !alpha [*CYAN, 80] # Editor gutter background color for lines that are modified
  editorGutter.addedBackground: !alpha [*GREEN, 80] # Editor gutter background color for lines that are added
  editorGutter.deletedBackground: !alpha [*RED, 80] # Editor gutter background color for lines that are deleted

  # Explorer Colors
  gitDecoration.modifiedResourceForeground: *CYAN
  gitDecoration.deletedResourceForeground: *RED
  gitDecoration.untrackedResourceForeground: *GREEN
  gitDecoration.ignoredResourceForeground: *FGDim
  gitDecoration.conflictingResourceForeground: *PURPLE

  # Diff Editor Colors
  diffEditor.insertedTextBackground: !alpha [*GREEN, 20] # Background color for inserted text
  diffEditor.insertedTextBorder: # Outline color for inserted text
  diffEditor.removedTextBackground: !alpha [*RED, 50] # Background color for removed text
  diffEditor.removedTextBorder: # Outline color for removed text

  # Editor Widget Colors
  editorWidget.background: *BGLight # Background color of editor widgets, such as Find/Replace
  editorWidget.resizeBorder: *PRIMARY # Left Border of editor Widgets
  editorWidgetBorder: # Border color of the editor widget unless the widget does not contain a border or defines its own border color

  editorSuggestWidget.background: *BGLight # Background color of the suggestion widget
  editorSuggestWidget.border: # Border color of the suggestion widget
  editorSuggestWidget.foreground: *FG # Foreground color of the suggestion widget
  editorSuggestWidget.highlightForeground: # Color of the match highlights in the suggestion widget
  editorSuggestWidget.selectedBackground: !alpha [*CYAN, 60] # Background color of the selected entry in the suggestion widget
  editorSuggestWidget.selectedForeground: *FG # Background color of the selected entry in the suggestion widget

  editorHoverWidget.background: *BGLight # Background color of the editor hover
  editorHoverWidget.border: *PRIMARY # Border color of the editor hover
  editorHoverWidget.foreground: *FG
  editorWidget.foreground: *FG

  debugExceptionWidget.background: # Exception widget background color
  debugExceptionWidget.border: # Exception widget border color

  editorMarkerNavigation.background: *BGLight # Editor marker navigation widget background
  editorMarkerNavigationError.background: # Editor marker navigation widget error color
  editorMarkerNavigationWarning.background: # Editor marker navigation widget warning color

  # Peek View Colors
  peekView.border: *PRIMARY # Color of the peek view borders and arrow
  peekViewEditor.background: *BG # Background color of the peek view editor
  peekViewEditorGutter.background: # Background color of the gutter in the peek view editor
  peekViewEditor.matchHighlightBackground: !alpha [*YELLOW, 80] # Match highlight color in the peek view editor
  peekViewResult.background: *BGLight # Background color of the peek view result list
  peekViewResult.fileForeground: *FG # Foreground color for file nodes in the peek view result list
  peekViewResult.lineForeground: *FG # Foreground color for line nodes in the peek view result list
  peekViewResult.matchHighlightBackground: !alpha [*YELLOW, 80] # Match highlight color in the peek view result list
  peekViewResult.selectionBackground: *SELECTION # Background color of the selected entry in the peek view result list
  peekViewResult.selectionForeground: *FG # Foreground color of the selected entry in the peek view result list
  peekViewTitle.background: *BGLight # Background color of the peek view title area
  peekViewTitleDescription.foreground: *FGDim # Color of the peek view title info
  peekViewTitleLabel.foreground: *FG # Color of the peek view title

  # Merge Conflicts
  merge.currentHeaderBackground: !alpha [*GREEN, 90] # Current header background in inline merge conflicts
  merge.currentContentBackground: # Current content background in inline merge conflicts
  merge.incomingHeaderBackground: !alpha [*PURPLE, 90] # Incoming header background in inline merge conflicts
  merge.incomingContentBackground: # Incoming content background in inline merge conflicts
  merge.border: # Border color on headers and the splitter in inline merge conflicts
  editorOverviewRuler.currentContentForeground: *GREEN # Current overview ruler foreground for inline merge conflicts
  editorOverviewRuler.incomingContentForeground: *PURPLE # Incoming overview ruler foreground for inline merge conflicts

  # Panel Colors
  panel.background: *BGLight # Panel background color
  panel.border: *BGLighter # Panel border color on the top separating to the editor
  panelTitle.activeBorder: *PRIMARY # Border color for the active panel title
  panelTitle.activeForeground: *FG # Title color for the active panel
  panelTitle.inactiveForeground: *FGDimmer # Title color for the inactive panel

  # Status Bar Colors
  statusBar.background: *BGLighter # Standard Status Bar background color
  statusBar.foreground: *FG # Status Bar foreground color
  statusBar.debuggingBackground: *PRIMARY # Status Bar background color when a program is being debugged
  statusBar.debuggingForeground: *FG # Status Bar foreground color when a program is being debugged
  statusBar.noFolderBackground: *BGLighter # Status Bar background color when no folder is opened
  statusBar.noFolderForeground: *FG # Status Bar background color when no folder is opened
  statusBarItem.activeBackground: # Status Bar item background color when clicking
  statusBarItem.hoverBackground: # Status Bar item background color when hovering
  statusBarItem.prominentBackground: *RED # Status Bar prominent items background color. Prominent items stand out from other Status Bar entries to indicate importance
  statusBarItem.prominentHoverBackground: *PRIMARY # Status Bar prominent items background color when hovering. Prominent items stand out from other Status Bar entries to indicate importance
  statusBarItem.remoteForeground: *YELLOWISH # Background color for the remote indicator on the status bar
  statusBarItem.remoteBackground: *BGLight # Foreground color for the remote indicator on the status bar
  statusBar.border: *BG

  # Text colors (e.g. in hover widget)
  textCodeBlock.background: *SELECTION
  textBlockQuote.background: *BGLighter
  textLink.foreground: *ORANGE
  textLink.activeForeground: *YELLOWISH
  textPreformat.foreground: *FGDim

  # Title Bar Colors (MacOS Only)
  titleBar.activeBackground: *BGDark # Title Bar background when the window is active
  titleBar.activeForeground: *FG # Title Bar foreground when the window is active
  titleBar.inactiveBackground: *BGDarker # Title Bar background when the window is inactive
  titleBar.inactiveForeground: *FGDim # Title Bar foreground when the window is inactive

  # Notification Dialog Colors
  notification.background: *BG # Notifications background color
  notification.foreground: *FG # Notifications foreground color
  notification.buttonBackground: *PRIMARY
  notification.buttonForeground: *FG
  notification.buttonHoverBackground: *LineHighlight
  notification.errorBackground: *RED
  notification.errorForeground: *FG
  notification.infoBackground: *BLUE
  notification.infoForeground: *BG
  notification.warningBackground: *YELLOW
  notification.warningForeground: *BG

  # Extensions
  extensionButton.prominentForeground: *FG # Extension view button foreground color (for example Install button)
  extensionButton.prominentBackground: *PRIMARY # Extension view button background color
  extensionButton.prominentHoverBackground: !alpha [*PRIMARY, 80] # Extension view button background hover color

  # Quick Picker
  pickerGroup.border: *PRIMARY # Quick picker (Quick Open) color for grouping borders
  pickerGroup.foreground: *PRIMARY # Quick picker (Quick Open) color for grouping labels
  quickInputTitle.background: *BGLight
  quickInput.background: *BGLight
  quickInputList.focusBackground: *SELECTION
  quickInputList.focusForeground: *FG
  quickInputList.focusIconForeground: *FGDim

  # Debug
  debugToolBar.background: *BGLighter # Debug toolbar background color

  # Welcome Page
  welcomePage.buttonBackground: *BGLight # Background color for the buttons on the Welcome page
  welcomePage.buttonHoverBackground: *BGLighter # Hover background color for the buttons on the Welcome page
  walkThrough.embeddedEditorBackground: *BGLight # Background color for the embedded editors on the Interactive Playground

  # Setting Editor
  settings.headerForeground: *FG # The foreground color for a section header or active title
  settings.modifiedItemForeground: *CYAN # The foreground color for a the modified setting indicator
  settings.modifiedItemIndicator: *CYAN # The color of the line that indicates a modified setting
  settings.inactiveSelectedItemBorder: # The color of the selected setting row border, when the settings list does not have focus
  settings.dropdownBackground: *BGLighter # Dropdown background
  settings.dropdownForeground: *FG # Dropdown foreground
  settings.dropdownBorder: # Dropdown border
  settings.checkboxBackground: *BGLighter # Checkbox background
  settings.checkboxForeground: *FG # Checkbox foreground
  settings.checkboxBorder: *FGDimmer # Checkbox border
  settings.textInputBackground: *BGDark # Text input box background
  settings.textInputForeground: *FG # Text input box foreground
  settings.textInputBorder: *FGDimmer # Text input box border
  settings.numberInputBackground: *BGDark # Number input box background
  settings.numberInputForeground: *FG # Number input box foreground
  settings.numberInputBorder: *FGDimmer # Number input box border

  # Breadcrumbs
  breadcrumb.foreground: *FGDim # Color of breadcrumb items
  breadcrumb.background: *BG
  breadcrumb.focusForeground: *FG # Color of focused breadcrumb items
  breadcrumb.activeSelectionForeground: *FG # Color of selected breadcrumb items
  breadcrumbPicker.background: *BGLight # Background color of breadcrumb item picker

  # Misc
  menu.separatorBackground: # Color of a separator menu item in menus
  listFilterWidget.background: !alpha [*PRIMARY, 72] # Background color of the type filter widget in lists and trees.
  listFilterWidget.outline: *BGLighter # Outline color of the type filter widget in lists and trees.
  listFilterWidget.noMatchesOutline: *RED # Outline color of the type filter widget in lists and trees, when there are no matches.

# Syntaxes
tokenColors:
  # =============================================================================
  # General
  # =============================================================================

  - scope:
      - emphasis
    settings:
      fontStyle: italic
  - scope:
      - strong
    settings:
      fontStyle: bold
  - scope:
      - header
    settings:
      foreground: *YELLOW

  # Diffs
  # ======
  - scope:
      - meta.diff
      - meta.diff.header
    settings:
      foreground: *COMMENT
  - scope:
      - markup.inserted
    settings:
      foreground: *GREEN
  - scope:
      - markup.deleted
    settings:
      foreground: *RED
  - scope:
      - markup.changed
    settings:
      foreground: *CYAN
  - scope:
      - invalid
    settings:
      foreground: *RED
  - scope:
      - invalid.deprecated
    settings:
      foreground: *RED
      fontStyle: underline italic
  - scope:
      - entity.name.filename
    settings:
      foreground: *YELLOW
  - scope:
      - markup.error
    settings:
      foreground: *RED

  # Markdown / RST / Prose
  # ======================

  - name: Underlined markup
    scope:
      - markup.underline
    settings:
      fontStyle: underline

  - name: Bold markup
    scope:
      - markup.bold
    settings:
      fontStyle: bold
      foreground: *YELLOW

  - name: Markup headings
    scope:
      - markup.heading
    settings:
      fontStyle: bold
      foreground: *ORANGE

  - name: Markup italic
    scope:
      - markup.italic
    settings:
      foreground: *YELLOWISH
      fontStyle: italic

  - name: Bullets, lists (prose)
    scope:
      - beginning.punctuation.definition.list.markdown
      - beginning.punctuation.definition.quote.markdown
      - punctuation.definition.link.restructuredtext
    settings:
      foreground: *BLUE

  - name: Links (prose)
    scope:
      - markup.underline.link
      - markup.underline.link.image
    settings:
      foreground: *CYAN

  - name: Link text, image alt text (prose)
    scope:
      - meta.link.reference.def.restructuredtext
      - punctuation.definition.directive.restructuredtext
      - string.other.link.description
      - string.other.link.title
    settings:
      foreground: *YELLOWISH

  - name: Blockquotes (prose)
    scope:
      - entity.name.directive.restructuredtext
      - markup.quote
    settings:
      foreground: *COMMENT
      fontStyle: italic

  - name: Horizontal rule (prose)
    scope:
      - meta.separator.markdown
    settings:
      foreground: *COMMENT

  - name: Inline code (prose)
    scope:
      - markup.inline.raw
      - markup.raw.restructuredtext
    settings:
      foreground: *GREEN

  - name: Code blocks
    scope:
      - fenced_code.block.language
      - markup.raw.inner.restructuredtext
      - markup.fenced_code.block.markdown punctuation.definition.markdown
    settings:
      foreground: *GREEN

  - name: Prose constants
    scope:
      - punctuation.definition.constant.restructuredtext
    settings:
      foreground: *BLUE

  - name: Braces in markdown headings
    scope:
      - markup.heading.markdown punctuation.definition.string.begin
      - markup.heading.markdown punctuation.definition.string.end
    settings:
      foreground: *PURPLE

  - name: Braces in markdown paragraphs
    scope:
      - meta.paragraph.markdown punctuation.definition.string.begin
      - meta.paragraph.markdown punctuation.definition.string.end
    settings:
      foreground: *YELLOW

  - name: Braces in markdown blockquotes
    scope:
      - markup.quote.markdown meta.paragraph.markdown punctuation.definition.string.begin
      - markup.quote.markdown meta.paragraph.markdown punctuation.definition.string.end
    settings:
      foreground: *YELLOW

  # =============================================================================
  # Classes
  # =============================================================================

  - name: User-defined class names
    scope:
      - entity.name.type.class
      - entity.name.type.parameter
    settings:
      foreground: *YELLOW

  - name: this, super, self, etc.
    scope:
      - keyword.expressions-and-types.swift
      - keyword.other.this
      - variable.language
      - variable.language punctuation.definition.variable.php # the "$" symbol in $this
      - variable.other.readwrite.instance.ruby # ruby's "@" instance symbol
      - variable.parameter.function.language.special # Special words as parameters
    settings:
      foreground: *ORANGE
      fontStyle: bold

  - name: Inherited classes
    scope:
      - entity.other.inherited-class
    settings:
      fontStyle: italic
      foreground: *YELLOW

  - name: Support classes / types
    scope:
      - support.class
      - support.type
    settings:
      foreground: *YELLOW
      fontStyle: bold

  # =============================================================================
  # Comments
  # =============================================================================

  - name: Comments
    scope:
      - comment
      - punctuation.definition.comment
      - unused.comment
      - wildcard.comment
    settings:
      foreground: *COMMENT
      fontStyle: italic

  - name: JSDoc-style keywords
    scope:
      - comment keyword.codetag.notation
      - comment.block.documentation keyword
      - comment.block.documentation storage.type.class
    settings:
      foreground: *BLUE
      fontStyle: italic

  - name: JSDoc-style types
    scope:
      - comment.block.documentation entity.name.type
    settings:
      foreground: *YELLOW
      fontStyle:

  - name: JSDoc-style type brackets
    scope:
      - comment.block.documentation entity.name.type punctuation.definition.bracket
    settings:
      foreground: *CYAN
      fontStyle:

  - name: JSDoc-style comment parameters
    scope:
      - comment.block.documentation variable
    settings:
      foreground: *FG
      fontStyle:

  # =============================================================================
  # Constants
  # =============================================================================

  - name: Constants
    scope:
      - constant
    settings:
      foreground: *PURPLE

  - name: Language Constants
    scope:
      - constant.language
    settings:
      fontStyle: bold

  - name: Constant escape sequences
    scope:
      - constant.character.escape
      - constant.character.string.escape
      - constant.regexp
    settings:
      foreground: *RED

  # =============================================================================
  # Entities
  # =============================================================================

  - name: HTML tags
    scope:
      - entity.name.tag
    settings:
      foreground: *ORANGE

  - name: HTML tags
    scope:
      - entity.name.tag.css
      - entity.name.tag.scss
      - entity.name.tag.sass
    settings:
      foreground: *YELLOWISH
      fontStyle: bold

  - name: CSS attribute parent selectors / references ('&')
    scope:
      - entity.other.attribute-name.parent-selector
      - entity.name.tag.reference
    settings:
      foreground: *RED

  - name: HTML/CSS attribute names
    scope:
      - entity.other.attribute-name
      - entity.other.attribute-name.id
    settings:
      foreground: *YELLOW

  - name: HTML id selectors
    scope:
      - entity.other.attribute-name.id
    settings:
      fontStyle: bold

  - name: HTML attribute selectors
    scope:
      - entity.other.attribute-name.attribute
    settings:
      fontStyle: italic

  - name: SCSS attribute selector strings
    scope:
      - meta.attribute-selector
    settings:
      foreground: *GREEN

  - name: HTML/CSS pseudo classes
    scope:
      - entity.other.attribute-name.pseudo-class
    settings:
      fontStyle: italic

  # =============================================================================
  # Functions/Methods
  # =============================================================================

  - name: Function names
    scope:
      - entity.name.function
      - meta.function-call.object
      - meta.function-call.php
      - meta.function-call.static
      - meta.method-call.java meta.method
      - meta.method.groovy
      - support.function.any-method.lua
      - keyword.operator.function.infix
    settings:
      foreground: *CYAN

  - name: Function parameters
    scope:
      - entity.name.variable.parameter
      - meta.at-rule.function variable # Sass function params
      - meta.at-rule.mixin variable # Sass mixin params
      - meta.function.arguments variable.other.php
      - meta.selectionset.graphql meta.arguments.graphql variable.arguments.graphql
      - variable.parameter
    settings:
      fontStyle: underline

  - name: Decorators
    scope:
      - meta.decorator variable.other.readwrite
      - meta.decorator variable.other.property
    settings:
      foreground: *CYAN
      fontStyle: italic

  - name: Decorators Punctuation
    scope:
      - punctuation.decorator
    settings:
      foreground: *BLUE

  - name: Decorator Objects
    scope:
      - meta.decorator variable.other.object
    settings:
      foreground: *YELLOWISH

  # =============================================================================
  # Keywords
  # =============================================================================

  - name: Keywords
    scope:
      - keyword
      - punctuation.definition.keyword
    settings:
      foreground: *BLUE

  - name: Control keywords (for / while / if / else /etc)
    scope:
      - keyword.control
    settings:
      foreground: *ORANGE

  - name: Control keywords (for / while / if / else /etc)
    scope:
      - source.css keyword.control
    settings:
      foreground: *BLUE

  - name: Keyword "new"
    scope:
      - keyword.control.new
      - keyword.operator.new
    settings:
      fontStyle: bold

  - name: Flow keywords (await / void / etc)
    scope:
      - keyword.operator.expression.void
      - keyword.control.flow
    settings:
      foreground: *RED

  - name: Generic selectors (CSS/SCSS/Less/Stylus)
    scope:
      - meta.selector
    settings:
      foreground: *YELLOWISH

  # =============================================================================
  # Language Built-ins
  # =============================================================================

  - name: Language Built-ins
    scope:
      - support
      - variable.other.predefined
    settings:
      fontStyle: italic bold

  - name: Built-in magic functions
    scope:
      - support.function.magic
    settings:
      foreground: *GREEN
      fontStyle: bold

  # =============================================================================
  # Punctuation
  # =============================================================================

  - name: Separators (key/value, namespace, inheritance, pointer, hash, slice, etc)
    scope:
      - constant.other.symbol.hashkey punctuation.definition.constant.ruby
      - entity.other.attribute-name.placeholder punctuation # Sass placeholder `%` symbols
      - entity.other.attribute-name.pseudo-class punctuation
      - entity.other.attribute-name.pseudo-element punctuation
      - meta.group.double.toml
      - meta.group.toml
      - meta.object-binding-pattern-variable punctuation.destructuring
      - punctuation.colon.graphql
      - punctuation.definition.block.scalar.folded.yaml
      - punctuation.definition.block.scalar.literal.yaml
      - punctuation.definition.block.sequence.item.yaml
      - punctuation.definition.entity.other.inherited-class
      - punctuation.function.swift
      - punctuation.separator.dictionary.key-value
      - punctuation.separator.hash
      - punctuation.separator.inheritance
      - punctuation.separator.key-value
      - punctuation.separator.key-value.mapping.yaml
      - punctuation.separator.namespace
      - punctuation.separator.pointer-access
      - punctuation.separator.slice
      - string.unquoted.heredoc punctuation.definition.string
      - support.other.chomping-indicator.yaml
      - punctuation.separator.annotation
    settings:
      foreground: *BLUE

  - name: Brackets, braces, parens, etc.
    scope:
      - keyword.operator.other.powershell # Commas
      - keyword.other.statement-separator.powershell
      - meta.brace.round
      - meta.function-call punctuation
      - punctuation.definition.arguments.begin
      - punctuation.definition.arguments.end
      - punctuation.definition.entity.begin
      - punctuation.definition.entity.end
      - punctuation.definition.tag.cs # HTML tags in comments
      - punctuation.definition.type.begin
      - punctuation.definition.type.end
      - punctuation.section.scope.begin
      - punctuation.section.scope.end
      - storage.type.generic.java
      - string.template meta.brace
      - string.template punctuation.accessor
      - punctuation.accessor
    settings:
      foreground: *FG

  - name: HTML tag begin / end
    scope:
      - punctuation.definition.tag
    settings:
      foreground: !alpha [*ORANGE, 94]

  - name: Type Parameter begin / end
    scope:
      - punctuation.definition.typeparameters
    settings:
      foreground: !alpha [*YELLOW, 94]

  - name: Variable interpolation operators
    scope:
      - meta.string-contents.quoted.double punctuation.definition.variable
      - punctuation.definition.interpolation.begin
      - punctuation.definition.interpolation.end
      - punctuation.definition.template-expression.begin
      - punctuation.definition.template-expression.end
      - punctuation.section.embedded.begin
      - punctuation.section.embedded.coffee
      - punctuation.section.embedded.end
      - punctuation.section.embedded.end source.php # PHP edge case
      - punctuation.section.embedded.end source.ruby # Issue with ruby's tmLanguage
      - punctuation.definition.variable.makefile
    settings:
      foreground: *ORANGE

  # =============================================================================
  # Serializable / Config Langages
  # =============================================================================

  - name: Keys (serializable languages)
    scope:
      - entity.name.function.target.makefile
      - entity.name.section.toml
      - entity.name.tag.yaml
      - variable.other.key.toml
    settings:
      foreground: *ORANGE

  - name: Key qoutes
    scope:
      - punctuation.support.type.property-name.begin.json
      - punctuation.support.type.property-name.end.json
      - punctuation.support.type.property-name.begin.yaml
      - punctuation.support.type.property-name.end.yaml
      - punctuation.support.type.property-name.begin.toml
      - punctuation.support.type.property-name.end.toml
      - punctuation.entity.name.function.target.begin.makefile
      - punctuation.entity.name.function.target.end.makefile
      - punctuation.entity.name.section.begin.toml
      - punctuation.entity.name.section.end.toml
      - punctuation.entity.name.tag.begin.yaml
      - punctuation.entity.name.tag.end.yaml
    settings:
      foreground: !alpha [*ORANGE, 94]

  - name: Dates / timestamps (serializable languages)
    scope:
      - constant.other.date
      - constant.other.timestamp
    settings:
      foreground: *YELLOW

  - name: YAML aliases
    scope:
      - variable.other.alias.yaml
      - entity.name.type.anchor.yaml
      - entity.name.type.anchor.toml
    settings:
      fontStyle: italic underline
      foreground: *FG

  - name: Control characters
    scope:
      - source.yaml keyword.control
      - source.toml keyword.control
    settings:
      foreground: *BLUE

  # =============================================================================
  # Storage
  # =============================================================================

  - name: Storage
    scope:
      - storage
      - meta.implementation storage.type.objc
      - meta.interface-or-protocol storage.type.objc
      - source.groovy storage.type.def
    settings:
      fontStyle: regular
      foreground: *BLUE

  - name: Types
    scope:
      - entity.name.type.interface
      - entity.name.type.class
      - keyword.type.cs
      - meta.protocol-list.objc
      - meta.return-type.objc
      - source.go storage.type
      - source.groovy storage.type
      - source.java storage.type
      - source.powershell entity.other.attribute-name
      - storage.class.std.rust
      - storage.type.attribute.swift
      - storage.type.c
      - storage.type.core.rust
      - storage.type.cs
      - storage.type.groovy
      - storage.type.objc
      - storage.type.php
      - storage.type.haskell
      - storage.type.ocaml
    settings:
      foreground: *YELLOW

  - name: Primitives
    scope:
      - entity.name.type.primitive
      - keyword.primitive-datatypes.swift
      - keyword.type.primitive
      - source.go storage.type.primitive
      - source.groovy storage.type.primitive
      - source.java storage.type.primitive
      - storage.type.primitive
    settings:
      fontStyle: bold
      foreground: *YELLOW

  - name: Support Types
    scope:
      - support.type
    settings:
      fontStyle: bold
      foreground: *YELLOW

  - name: Support Primitives
    scope:
      - support.type.primitive
    settings:
      fontStyle: italic bold
      foreground: *YELLOW

  - name: Generics, templates, and mapped type declarations
    scope:
      - entity.name.type.type-parameters
      - meta.indexer.mappedtype.declaration entity.name.type # Mapped type declarations
      - meta.type.parameter entity.name.type # Generic type declarations
      - meta.type.parameters
    settings:
      foreground: *YELLOW
      fontStyle: italic

  - name: Modifiers
    scope:
      - storage.modifier
    settings:
      foreground: *RED

  # =============================================================================
  # RegExp
  # =============================================================================

  - name: RegExp string
    scope:
      - string.regexp
      - constant.other.character-class.set.regexp
      - constant.character.escape.backslash.regexp
    settings:
      foreground: *YELLOWISH

  - name: Non-capture operators
    scope:
      # NOTE: The scope name is a misnomer. It is actually non-capture operators
      - punctuation.definition.group.capture.regexp
    settings:
      foreground: *BLUE

  - name: RegExp start and end characters
    scope:
      - string.regexp punctuation.definition.string.begin
      - string.regexp punctuation.definition.string.end
    settings:
      foreground: *RED

  - name: Character group
    scope:
      - punctuation.definition.character-class.regexp
      - constant.other.character-class.set.regexp
    settings:
      foreground: *GREEN

  - name: Capture groups
    scope:
      - punctuation.definition.group.regexp
      - meta.group.regexp
    settings:
      foreground: *YELLOW

  - name: Assertion groups
    scope:
      - meta.group.assertion.regexp
      - meta.group.assertion.regexp punctuation.definition.group.regexp
    settings:
      foreground: *COMMENT

  - name: Assertion operators
    scope:
      - punctuation.definition.group.assertion.regexp
      - punctuation.definition.group.no-capture.regexp
      - keyword.operator.negation.regexp
    settings:
      foreground: *BLUE

  - name: Positive lookaheads
    scope:
      - meta.assertion.look-ahead.regexp
    settings:
      foreground: *BLUE

  - name: Flags
    scope:
      - string.regexp keyword.other
    settings:
      foreground: *RED

  # =============================================================================
  # Strings
  # =============================================================================

  - name: Strings
    scope:
      - string
    settings:
      foreground: *GREEN

  - name: String quotes (temporary vscode fix)
    scope:
      # NOTE: This is a temporary fix for VSCode expand selection.
      # See (https://github.com/Microsoft/vscode/issues/4795)
      - punctuation.definition.string.begin
      - punctuation.definition.string.end
      - punctuation.support.type.property-name.begin
      - punctuation.support.type.property-name.end
    settings:
      foreground: !alpha [*GREEN, 94]

  - name: Docstrings
    scope:
      - string.quoted.docstring.multi
      - string.quoted.docstring.multi.python punctuation.definition.string.begin
      - string.quoted.docstring.multi.python punctuation.definition.string.end
      - string.quoted.docstring.multi.python constant.character.escape
    settings:
      foreground: *COMMENT

  # =============================================================================
  # Variables
  # =============================================================================

  - name: Variables without special properties
    scope:
      - variable
    settings:
      foreground: *FG

  - name: Variables and object properties
    scope:
      - constant.other.key.perl # Perl edge case
      - variable.other.constant.js # Fix incorrect highlighting of pseudo-constants in js, jsx
      - variable.other.constant.ts # Fixes incorrect highlighting of pseudo-constants in ts
      - variable.other.constant.tsx # Fixes incorrect highlighting of pseudo-constants in tsx
    settings:
      foreground: *FG

  - name: Object properties
    scope:
      - support.variable.property
      - support.constant.property
      - support.type.property-name
      - meta.object-literal.key
      - meta.definition.property
      - variable.property
      - variable.object.property
      - variable.other.property
    settings:
      foreground: *YELLOWISH

  - name: Support Keys
    scope:
      - support.type.property-name
    settings:
      fontStyle: ''

  - name: Object Support Properties
    scope:
      - support.variable.property
      - support.constant.property
    settings:
      fontStyle: italic

  - name: Destructuring / aliasing reference name (LHS)
    scope:
      - meta.import variable.other.readwrite # Module import aliasing (real name)
      - meta.object-binding-pattern-variable variable.object.property # Object destructuring property
      - meta.variable.assignment.destructured.object.coffee variable # Object destructuring property (coffeescript)
    settings:
      fontStyle: italic
      foreground: *YELLOWISH

  - name: Destructuring / aliasing variable name (RHS)
    scope:
      - meta.import variable.other.readwrite.alias # Module import aliasing (alias name)
      - meta.export variable.other.readwrite.alias # Module import aliasing (alias name)
      - meta.variable.assignment.destructured.object.coffee variable variable # Object destructuring variable (coffeescript)
    settings:
      fontStyle: bold
      foreground: *FG

  # =============================================================================
  # Language Extensions / Edge Cases
  # =============================================================================

  # GraphQL
  # =======
  - name: GraphQL keys
    scope:
      - meta.selectionset.graphql variable
    settings:
      foreground: *FG

  - name: GraphQL function arguments
    scope:
      - meta.selectionset.graphql meta.arguments variable
    settings:
      foreground: *YELLOWISH

  - name: GraphQL fragment name (definition)
    scope:
      - entity.name.fragment.graphql
      - variable.fragment.graphql
    settings:
      foreground: *CYAN

  # Edge Cases
  # ==========
  - name: Edge cases (foreground color resets)
    scope:
      - constant.other.symbol.hashkey.ruby # Ruby hash keys
      - keyword.operator.dereference.java # Java dot access
      - keyword.operator.navigation.groovy # groovy dot access
      - meta.scope.for-loop.shell punctuation.definition.string.begin
      - meta.scope.for-loop.shell punctuation.definition.string.end
      - meta.scope.for-loop.shell string
      - storage.modifier.import # Java / Groovy imports
      - punctuation.section.embedded.begin.tsx
      - punctuation.section.embedded.end.tsx
      - punctuation.section.embedded.begin.jsx
      - punctuation.section.embedded.end.jsx
      - punctuation.separator.list.comma.css # Commas separating selectors in CSS
      - constant.language.empty-list.haskell
    settings:
      foreground: *BLUE

  # This is set to conform to the standard of coloring language constants FG.
  # In this case, this colors "$?", "$@", "$*", "$1", etc..
  - name: Shell variables prefixed with "$" (edge case)
    scope:
      - source.shell variable.other
    settings:
      fontStyle: italic bold
      foreground: *FG

  - name: Makefile prerequisite names
    scope:
      - meta.scope.prerequisites.makefile
    settings:
      foreground: *ORANGE

  - name: SCSS attribute selector brackets
    scope:
      - punctuation.definition.attribute-selector.end.bracket.square.scss
      - punctuation.definition.attribute-selector.begin.bracket.square.scss
    settings:
      foreground: *BLUE

  - name: Haskell Pragmas
    scope:
      - meta.preprocessor.haskell
    settings:
      foreground: *COMMENT

# Syntaxes
semanticTokenColors:
  # Keep strings green
  stringLiteral:
    foreground: *GREEN

  # Other literals will be purple
  customLiteral:
    foreground: *PURPLE
  numberLiteral:
    foreground: *PURPLE

  # Make all global variables bold
  namespace:
    bold: true
  variable:
    bold: true
  variable.local:
    bold: false
  property:
    bold: false

  # Make support properties italic
  property.defaultLibrary:
    bold: false
    italic: true

  # PURPLE enums
  enum:
    foreground: *PURPLE
